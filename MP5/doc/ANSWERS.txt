<your_group_name> = netid1, netid2...

Instruction
============
List at least 1 code smell for each question.
List at least 1 code example for each code smell.
Explain the code smell in each example with 1 or 2 sentences. 
(e.g. the process of ... appears 2 times in ... method.)

Answer to Q1
============
We found the following code smell(s): <CODE_SMELL_NAME_1>, <CODE_SMELL_NAME_2>...

Here are some example(s) of each code smell: 

Name: <CODE_SMELL_NAME_1>

Example 1: <EXPLANATION_FOR_EXAMPLE_1>
Code: 
	<CODE_OF_EXAMPLE_1>

Example 2: <EXPLANATION_FOR_EXAMPLE_2>
Code: 
	<CODE_OF_EXAMPLE_2>

...
	
Name: <CODE_SMELL_NAME_2>

Example 1: <EXPLANATION_FOR_EXAMPLE_1>
Code: 
	<CODE_OF_EXAMPLE_1>

Example 2: <EXPLANATION_FOR_EXAMPLE_2>
Code: 
	<CODE_OF_EXAMPLE_2>

...

Answer to Q2
============
We found the following code smell(s): <CODE_SMELL_NAME_1>, <CODE_SMELL_NAME_2>...

Here are some example(s) of each code smell: 
(same as Q1)


Answer to Q3
============
We found the following code smell(s): <Duplicated Code>

Here are some example(s) of each code smell: 
Name: <Duplicated Code>

Example 1: <The comparison syntax using explicitly way occurs 2 time in requestWorkstationPrintsDocument and requestBroadcast respectively>
Code: 
		do {
			try {
				report.write("\tNode '");
				report.write(currentNode.name);
				report.write("' accepts broadcast packet.\n");
				report.write("\tNode '");
				report.write(currentNode.name);
				report.write("' passes packet on.\n");
				report.flush();
			} catch (IOException exc) {
				// just ignore
			}

			currentNode = currentNode.nextNode;
		} while (!packet.destination.equals(currentNode.name));
	


Answer to Q4
============
We found the following code smell(s): <Switch statement>

Here are some example(s) of each code smell: 
Name: <Switch statement>

Example 1: the progress of switch statement occurs three times in PrintOn,printHTMLOn and printXMLOn respectively.
Code: 
	switch (currentNode.type) {
			case Node.NODE:
				buf.append("Node ");
				buf.append(currentNode.name);
				buf.append(" [Node]");
				break;
			case Node.WORKSTATION:
				buf.append("Workstation ");
				buf.append(currentNode.name);
				buf.append(" [Workstation]");
				break;
			case Node.PRINTER:
				buf.append("Printer ");
				buf.append(currentNode.name);
				buf.append(" [Printer]");
				break;
			default:
				buf.append("(Unexpected)");
				break;
			}
(same as Q1)
